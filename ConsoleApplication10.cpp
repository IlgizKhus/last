/*
Лайнландия представляет из себя одномерный мир, являющийся прямой, на котором располагаются N
городов, последовательно пронумерованных от 0 до N - 1 . Направление в сторону от первого города
к нулевому названо западным, а в обратную — восточным.
Когда в Лайнландии неожиданно начался кризис, все были жители мира стали испытывать глубокое
смятение. По всей Лайнландии стали ходить слухи, что на востоке живётся лучше, чем на западе.
Так и началось Великое Лайнландское переселение. Обитатели мира целыми городами отправились на
восток, покинув родные улицы, и двигались до тех пор, пока не приходили в город, в котором средняя
цена проживания была меньше, чем в родном.
*/

/*
В первой строке дано одно число N (2≤N≤10^5) — количество городов в Лайнландии. Во второй строке
дано N чисел a_i (0≤a_i≤10^9) — средняя цена проживания в городах с нулевого по (N - 1)-ый
соответственно.
*/

/*
Для каждого города в порядке с нулевого по (N - 1)-ый выведите номер города, в который переселятся
его изначальные жители. Если жители города не остановятся в каком-либо другом городе, отправившись
в Восточное Бесконечное Ничто, выведите -1 .
*/

#include <iostream>
#include <stdlib.h>
#include <cstring>
#pragma warning (disable:4996)

struct stec
{
    int i[2];
    stec* next;
};

stec* first = 0;

void push(int a, int b)
{
    stec* nx = first;
    first = new stec;
    first->next = nx;
    first->i[0] = a;
    first->i[1] = b;
}

void pop()
{
    stec* nx = first->next;
    delete(first);
    first = nx;
}

void pr()
{
    stec* e = first;
    while (e != 0)
    {
        printf("%d\n", e->i);
        e = e->next;
    }
}

int main()
{
    first = new stec;
    FILE* f;
    f = fopen("input.txt", "r");
    
    int n, a, i, *b;
    
    fscanf(f, "%d", &n);
    
    b = new int[n];
    fscanf(f, "%d", &a);
    push(a, 0);
    b[0] = -1;
    for (i = 1; i < n; i++)
    {
        fscanf(f, "%d", &a);
        while (a < first->i[0])
        {
            b[first->i[1]] = i;
            pop();
        }
        push(a, i);
        b[i] = -1;
    }
    for (i = 0; i < n; i++)
        printf("%d ", b[i]);

    printf("\n");


    fclose(f);
}