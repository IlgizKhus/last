/*
Телефонные номера в адресной книге мобильного телефона имеют один из следующих форматов: +7<код><номер>, 8<код><номер>, <номер>,
где <номер> — это семь цифр, а <код> — это три цифры или три цифры в круглых скобках. Если код не указан, то считается, что он
равен 495. Кроме того, в записи телефонного номера может стоять знак “-” между любыми двумя цифрами (см. пример). На данный
момент в адресной книге телефона Васи записано всего три телефонных номера, и он хочет записать туда еще один. Но он не может
понять, не записан ли уже такой номер в телефонной книге. Помогите ему! Два телефонных номера совпадают, если у них равны коды и
равны номера. Например, +7(916)0123456 и 89160123456 — это один и тот же номер.
*/

/*
В первой строке входных данных записан номер телефона, который Вася хочет добавить в адресную книгу своего телефона. В следующих
трех строках записаны три номера телефонов, которые уже находятся в адресной книге телефона Васи. Гарантируется, что каждая из
записей соответствует одному из трех приведенных в условии форматов.
*/

/*

Для каждого телефонного номера в адресной книге выведите YES (заглавными буквами), если он совпадает с тем телефонным номером,
который Вася хочет добавить в адресную книгу или NO (заглавными буквами) в противном случае.
*/



#include <iostream>
#include <stdlib.h>
#include <cstring>
#pragma warning (disable:4996)

void stot(char* s, char* t)
{
    int n = strlen(s), j = 0;
    if (n == 11)
    {
        for (int i = 1; i < n; i++)
        {
            t[j] = s[i];
            j++;
            t[j] = '\0';
        }
    }
    if (n == 10)
    {
        strcpy(t, s);
    }
    if (n == 8)
    {
        t[0] = '4';
        t[1] = '9';
        t[2] = '5';
        j = 3;
        for (int i = 1; i < n; i++)
        {
            t[j] = s[i];
            j++;
            t[j] = '\0';
        }
    }
    if (n == 7)
    {
        t[0] = '4';
        t[1] = '9';
        t[2] = '5';
        j = 3;
        for (int i = 0; i < n; i++)
        {
            t[j] = s[i];
            j++;
            t[j] = '\0';
        }
    }
}

int main()
{
    char nnum[30], num1[30], num2[30], num3[30], snnum[12], snum1[12], snum2[12], snum3[12], tnnum[11], tnum1[11], tnum2[11], tnum3[11];
    scanf("%s", &nnum);
    scanf("%s", &num1);
    scanf("%s", &num2);
    scanf("%s", &num3);
    int i = 0;
    int i1 = 0, i2 = 0, i3 = 0, i0 = 0;
    for (i; i < 30; i++)
    {
        if ((nnum[i] >= '0') && (nnum[i] <= '9'))
        {
            snnum[i0] = nnum[i];
            i0++;
            snnum[i0] = '\0';
        }
        if ((num1[i] >= '0') && (num1[i] <= '9'))
        {
            snum1[i1] = num1[i];
            i1++;
            snum1[i1] = '\0';
        }
        if ((num2[i] >= '0') && (num2[i] <= '9'))
        {
            snum2[i2] = num2[i];
            i2++;
            snum2[i2] = '\0';
        }
        if ((num3[i] >= '0') && (num3[i] <= '9'))
        {
            snum3[i3] = num3[i];
            i3++;
            snum3[i3] = '\0';
        }
    }

    stot(snnum, tnnum);
    stot(snum1, tnum1);
    stot(snum2, tnum2);
    stot(snum3, tnum3);




    if (!strcmp(tnnum, tnum1))
        printf("YES\n");
    else
        printf("NO\n");
    if (!strcmp(tnnum, tnum2))
        printf("YES\n");
    else
        printf("NO\n");
    if (!strcmp(tnnum, tnum3))
        printf("YES\n");
    else
        printf("NO\n");
}